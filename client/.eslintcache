[{"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/index.js":"1","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/App.js":"2","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/context/context.js":"3","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/context/contextReducer.js":"4","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/routes/index.js":"5","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/Shop/ShopScreen.js":"6","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/MainIndex.js":"7","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/styles.js":"8","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/Shop/ItemCard.js":"9","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Spinner/Spinner.js":"10","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/index.js":"11","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/InfoCard.jsx":"12","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Snackbar/Snackbar.jsx":"13","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Main.jsx":"14","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/Details.jsx":"15","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/styles.js":"16","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/useTransactions.js":"17","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/utils/formatDate.js":"18","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/constants/categories.js":"19","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/styles.js":"20","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Snackbar/styles.js":"21","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/List.jsx":"22","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/Form.jsx":"23","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/styles.js":"24","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/Ocr.js":"25","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/styles.js":"26"},{"size":541,"mtime":1649919042000,"results":"27","hashOfConfig":"28"},{"size":118,"mtime":1650628263000,"results":"29","hashOfConfig":"28"},{"size":1002,"mtime":1650629194000,"results":"30","hashOfConfig":"28"},{"size":583,"mtime":1649657204000,"results":"31","hashOfConfig":"28"},{"size":367,"mtime":1649919535000,"results":"32","hashOfConfig":"28"},{"size":6843,"mtime":1650628426000,"results":"33","hashOfConfig":"28"},{"size":1788,"mtime":1651042730138,"results":"34","hashOfConfig":"28"},{"size":582,"mtime":1649919786000,"results":"35","hashOfConfig":"28"},{"size":1756,"mtime":1651037126236,"results":"36","hashOfConfig":"28"},{"size":359,"mtime":1650187649000,"results":"37","hashOfConfig":"28"},{"size":216,"mtime":1651037840741,"results":"38","hashOfConfig":"28"},{"size":335,"mtime":1650985456515,"results":"39","hashOfConfig":"28"},{"size":901,"mtime":1649919321000,"results":"40","hashOfConfig":"28"},{"size":1277,"mtime":1650985229071,"results":"41","hashOfConfig":"28"},{"size":2242,"mtime":1650628502000,"results":"42","hashOfConfig":"28"},{"size":247,"mtime":1649657204000,"results":"43","hashOfConfig":"28"},{"size":1937,"mtime":1650607016000,"results":"44","hashOfConfig":"28"},{"size":310,"mtime":1650606995000,"results":"45","hashOfConfig":"28"},{"size":1693,"mtime":1649840037000,"results":"46","hashOfConfig":"28"},{"size":514,"mtime":1649657204000,"results":"47","hashOfConfig":"28"},{"size":206,"mtime":1649657204000,"results":"48","hashOfConfig":"28"},{"size":4025,"mtime":1650629068000,"results":"49","hashOfConfig":"28"},{"size":7430,"mtime":1651038443080,"results":"50","hashOfConfig":"28"},{"size":416,"mtime":1649657204000,"results":"51","hashOfConfig":"28"},{"size":3566,"mtime":1650628862000,"results":"52","hashOfConfig":"28"},{"size":247,"mtime":1651036042311,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"jtfrf0",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"56"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"56"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"56"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"56"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/index.js",[],["112","113"],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/App.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/context/context.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/context/contextReducer.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/routes/index.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/Shop/ShopScreen.js",["114","115"],"import * as React from 'react'\nimport Box from '@mui/material/Box'\nimport {\n  Button,\n  Checkbox,\n  FormControlLabel,\n  Grid,\n  Paper,\n  RadioGroup,\n  TextField,\n  Typography,\n} from '@mui/material'\nimport ItemCard from './ItemCard'\nimport Spinner from '../../components/Spinner/Spinner'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function ShopScreen() {\n  const navigate = useNavigate()\n\n  const [product, setProduct] = React.useState([])\n  const [spinnerMode, setSpinnerMode] = React.useState(false)\n  const [apiFilter, setApiFilter] = React.useState([])\n\n  const [selectedFilter, setSelectedFilter] = React.useState(false)\n  const [filteredObjects, setFilteredObjects] = React.useState(null)\n  const [inputValue, setInputValue] = React.useState(null)\n\n  let filteredRecord = filteredObjects?.sort((a, b) =>\n    a?.extracted_price < b?.extracted_price ? -1 : 1,\n  )\n  let nonFilteredRecord = product?.sort((a, b) =>\n    a?.extracted_price < b?.extracted_price ? -1 : 1,\n  )\n\n  let priceWise = filteredObjects === null ? nonFilteredRecord : filteredRecord\n\n  const makeAPICall = async (selectedFilter) => {\n    try {\n      setSpinnerMode(true)\n      const response = await fetch(`http://localhost:7000/getProducts/?filter=${selectedFilter}&search=${inputValue}`,{ mode: 'cors' },)\n      const data = await response.json()\n      setProduct(data.shopping_results)\n      setSpinnerMode(false)\n    } catch (e) {\n      setSpinnerMode(false)\n      console.log(e)\n    }\n  }\n\n  const getFilters = async () => {\n    try {\n      setSpinnerMode(true)\n      setInputValue(null)\n      setSelectedFilter(false)\n      const response = await fetch(`http://localhost:7000/getFilters`, {mode: 'cors'})\n      const data = await response.json()\n      setApiFilter(data)\n      setSpinnerMode(false)\n    } catch (e) {\n      setSpinnerMode(false)\n      console.log(e)\n    }\n  }\n\n  const getText = async (value) => {\n    if (value === null || value?.length <= 1 || value === undefined || value === '')\n      setInputValue(null)\n    else setInputValue(value)\n\n    setSpinnerMode(true)\n    const response = await fetch(`http://localhost:7000/getProducts/?filter=${selectedFilter}&search=${inputValue}`, { mode: 'cors' })\n    const data = await response.json()\n    setProduct(data.shopping_results)\n    setSpinnerMode(false)\n  }\n\n  const handleCheckBox = (val) => {\n    setSelectedFilter(val)\n    setFilteredObjects(null)\n  }\n\n  React.useEffect(() => {\n    getText(inputValue)\n  },[inputValue])\n\n  React.useEffect(() => {\n    getFilters()\n  }, [])\n\n  React.useEffect(() => {\n    makeAPICall(selectedFilter)\n  }, [selectedFilter])\n\n  return (\n    <Box>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper sx={{ marginX: 2, marginY: 3, minHeight: '80vh' }}>\n            <Box width={'100%'}>\n              <Spinner spinnerMode={spinnerMode} />\n              <Box mx={4} pb={4}>\n                <Grid container spacing={2}>\n                  <Grid item md={12}>\n                    <Button onClick={() => navigate('/')}>Back</Button>\n                  </Grid>\n                  <Grid item md={12}>\n                    {/* <select id=\"mySelect\" onchange=\"setTimeout(myFunction, 5000);\"> */}\n                    <TextField\n                      placeholder=\"Search Product...\"\n                      fullWidth\n                      type=\"text\"\n                      onKeyUp={(e) => getText(e.target.value)}\n                    />\n                  </Grid>\n                  <Grid item md={2.5}>\n                    {(selectedFilter || inputValue) && (\n                      <Box p={2} mb={2}>\n                        <Button\n                          sx={{ width: '100%' }}\n                          variant={'contained'}\n                          onClick={getFilters}\n                        >\n                          Reset Filter\n                        </Button>\n                      </Box>\n                    )}\n                    {apiFilter?.map((item, index) => {\n                      return (\n                        <Box\n                          key={index}\n                          borderRadius={2}\n                          border={'1px solid gray'}\n                          p={2}\n                          mb={2}\n                        >\n                          <Typography>{item.type}</Typography>\n                          {item?.options?.map((el, index) => {\n                            return (\n                              <Box key={index}>\n                                <RadioGroup\n                                  aria-labelledby=\"demo-radio-buttons-group-label\"\n                                  defaultValue=\"female\"\n                                  name=\"radio-buttons-group\"\n                                >\n                                  <FormControlLabel\n                                    onClick={() => handleCheckBox(el.tbs)}\n                                    control={\n                                      <Checkbox\n                                        checked={\n                                          el.tbs === selectedFilter && true\n                                        }\n                                      />\n                                    }\n                                    label={el.text}\n                                  />\n                                </RadioGroup>\n                              </Box>\n                            )\n                          })}\n                        </Box>\n                      )\n                    })}\n                  </Grid>\n                  <Grid item md={9.5}>\n                    <Grid container spacing={2}>\n                      {priceWise?.map((el, index) => {\n                        return (\n                          <Grid\n                            key={index}\n                            item\n                            xs={12}\n                            sm={4}\n                            md={3}\n                            lg={3}\n                            xl={2}\n                          >\n                            <ItemCard\n                              title={el.title}\n                              thumbnail={el.thumbnail}\n                              price={el.price}\n                              tag={el.tag}\n                              rating={el.rating}\n                              reviews={el.reviews}\n                              extensions={el.extensions}\n                              source={el.source}\n                              delivery={el.delivery}\n                            />\n                          </Grid>\n                        )\n                      })}\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Box>\n            </Box>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/MainIndex.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/styles.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/screens/Shop/ItemCard.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Spinner/Spinner.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/index.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/InfoCard.jsx",["116"],"import React from \"react\";\r\n\r\nconst isIncome = Math.round(Math.random());\r\n\r\nconst InfoCard = () => {\r\n  return (\r\n    <div elevation={3} style={{ textAlign: \"center\", padding: \"0 10%\" }}>\r\n      Try adding transactions: <br />\r\n      Manually \r\n      or \r\n      Via \r\n      Picture \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoCard;\r\n","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Snackbar/Snackbar.jsx",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Main.jsx",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/Details.jsx",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/styles.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/useTransactions.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/utils/formatDate.js",["117"],"export default (date) => {\r\n  const d = new Date(date);\r\n  let month = `${d.getUTCMonth() + 1}`;\r\n  let day = `${d.getUTCDate()}`;\r\n  const year = d.getUTCFullYear();\r\n\r\n  if (month.length < 2) { month = `0${month}`; }\r\n  if (day.length < 2) { day = `0${day}`; }\r\n\r\n  return [year, month, day].join('-');\r\n};\r\n","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/constants/categories.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/styles.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Snackbar/styles.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/List.jsx",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/Form.jsx",["118"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport { useSpeechContext } from \"@speechly/react-client\";\r\nimport Snackbar from \"../../Snackbar/Snackbar\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from \"../../../constants/categories\";\r\nimport useStyles from \"./styles\";\r\nimport { Box } from \"@mui/material\";\r\nimport Ocr from \"./Ocr\";\r\nimport Spinner from \"../../Spinner/Spinner\";\r\n\r\nconst initialState = {\r\n  amount: \"\",\r\n  category: \"\",\r\n  type: \"Income\",\r\n  date: formatDate(new Date().toUTCString()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [spinnerMode, setSpinnerMode] = React.useState(false);\r\n  const [dataOject, setDataOject] = React.useState(null);\r\n  const [errorText, setErrorText] = React.useState(\"\");\r\n  const [catText, setCatText] = React.useState(\"\");\r\n\r\n  const createTransaction = () => {\r\n    let catRegex = /[a-z0-9]/gi;\r\n    if (catRegex.test(formData.category) === false) {\r\n      setCatText(\"Category is required\");\r\n      return;\r\n    }\r\n\r\n    let amountRegex = /([1-9]*[.])?[1-9]+/gi;\r\n\r\n    if (\r\n      amountRegex.test(formData.amount) === false ||\r\n      !formData.date.includes(\"-\")\r\n    ) {\r\n      setErrorText(\"Amount is not correct\");\r\n      return;\r\n    }\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: \"Income\" });\r\n    } else if (\r\n      expenseCategories.map((iC) => iC.type).includes(formData.category)\r\n    ) {\r\n      setFormData({ ...formData, type: \"Expense\" });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({\r\n      ...formData,\r\n      amount: Number(formData.amount),\r\n      id: uuidv4(),\r\n    });\r\n    setFormData(initialState);\r\n    setErrorText(\"\");\r\n    setCatText(\"\");\r\n  };\r\n\r\n  const amountFun = (value) => {\r\n    let regexValue = /([0-9]*[.])?[0-9]+/gi.test(value);\r\n\r\n    if (regexValue) {\r\n      setFormData({\r\n        ...formData,\r\n        amount: value,\r\n      });\r\n    } else {\r\n      setFormData({\r\n        ...formData,\r\n        amount: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === \"add_expense\") {\r\n        setFormData({ ...formData, type: \"Expense\" });\r\n      } else if (segment.intent.intent === \"add_income\") {\r\n        setFormData({ ...formData, type: \"Income\" });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"create_transaction\"\r\n      ) {\r\n        return createTransaction();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === \"cancel_transaction\"\r\n      ) {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case \"amount\":\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case \"category\":\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: \"Income\", category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setFormData({ ...formData, type: \"Expense\", category });\r\n            }\r\n            break;\r\n          case \"date\":\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        formData.amount &&\r\n        formData.category &&\r\n        formData.type &&\r\n        formData.date\r\n      ) {\r\n        createTransaction();\r\n      }\r\n    }\r\n\r\n    if (dataOject) {\r\n      if (dataOject?.arrDate[0]) {\r\n        var dd = new Date(dataOject?.arrDate[0]);\r\n        dd.setUTCDate(dd.getUTCDate() + 1);\r\n      }\r\n\r\n      setFormData({\r\n        ...formData,\r\n        amount: dataOject?.value[0] ? dataOject?.value[0] : \"\",\r\n        date: formatDate(\r\n          dataOject?.arrDate[0] ? dd : formatDate(new Date().toUTCString())\r\n        ),\r\n      });\r\n    }\r\n  }, [dataOject, segment]);\r\n\r\n  const selectedCategories =\r\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Spinner spinnerMode={spinnerMode} />\r\n      <Grid item xs={12}>\r\n        <Box display={\"flex\"} justifyContent={\"center\"}>\r\n          <Ocr setDataOject={setDataOject} setSpinnerMode={setSpinnerMode} />\r\n        </Box>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment ? (\r\n            <div className=\"segment\">\r\n              {segment.words.map((w) => w.value).join(\" \")}\r\n            </div>\r\n          ) : null}\r\n          {/* {isSpeaking ? <BigTranscript /> : \"Start adding transactions\"} */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={formData.type}\r\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={formData.category}\r\n            onChange={(e) =>\r\n              setFormData({ ...formData, category: e.target.value })\r\n            }\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n\r\n        <Typography style={{ marginLeft: 7, color: \"red\", fontSize: \"12px\" }}>\r\n          {catText}\r\n        </Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          type=\"text\"\r\n          label=\"Amount\"\r\n          value={formData.amount}\r\n          onChange={(e) => amountFun(e.target.value)}\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          fullWidth\r\n          label=\"Date\"\r\n          type=\"date\"\r\n          value={formData.date}\r\n          onChange={(e) =>\r\n            setFormData({ ...formData, date: formatDate(e.target.value) })\r\n          }\r\n        />\r\n      </Grid>\r\n      <Typography style={{ marginLeft: 7, color: \"red\", fontSize: \"12px\" }}>\r\n        {errorText}\r\n      </Typography>\r\n      <Button\r\n        className={classes.button}\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={createTransaction}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;\r\n","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/styles.js",[],"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/Ocr.js",["119","120","121","122","123","124","125","126","127","128"],"import React, { useState, useEffect, useCallback } from 'react'\nimport { Box, Button } from '@mui/material'\nimport { useDropzone } from 'react-dropzone'\nimport Tesseract from 'tesseract.js'\n\nfunction Ocr({ setDataOject, setSpinnerMode }) {\n  const [selectedImage, setSelectedImage] = useState(null)\n  const [image, setImage] = useState(false)\n  const [error, setError] = React.useState(null)\n\n  React.useEffect(() => {\n    if (image) {\n      setSpinnerMode(true)\n    } else {\n      setSpinnerMode(false)\n    }\n\n    if (error) {\n      console.log(error)\n    }\n  }, [error, image])\n\n  useEffect(() => {\n    setImage(true)\n    // TODO Regex Expressions Start\n    let monthDayYear = /\\d{1,2}[\\- \\/ \\.]\\d{1,2}[\\- \\/ \\.]\\d{2,4}/gi\n    let engDate = /[a-z]+[ 0-9]+[,][ ]\\d{2,4}/gi\n    let totalAmount = /[total amount]+\\$[0-9]*[.]?[0-9]+/gi\n    let payment = /[payment: ]+\\$[0-9]*[.]?[0-9]+/gi\n    // TODO Regex Expressions End\n\n    Tesseract.recognize(selectedImage, 'eng')\n      .then(({ data: { text } }) => {\n\n        var arrTAmount = text.match(totalAmount)\n        var arrPayment = text.match(payment)\n        var arrDate = text.match(monthDayYear)\n        let engArrDate = text.match(engDate)\n\n        let TA = arrTAmount.find((el) => el.match('TOTAL'))\n        let T = arrTAmount.find((el) => el.match('Total'))\n        let P = arrPayment.find((el) => el.match('Payment'))\n\n        if (P) {\n          var words = P.split(' ')\n          let lastElement = words[words.length - 1]\n          let value = lastElement.match(/[0-9]*[.]?[0-9]+/gi)\n\n          let obj = { value, arrDate: engArrDate ? engArrDate : arrDate || [] }\n          setDataOject(obj)\n        }\n\n        if (TA) {\n          var words = TA.split(' ')\n          let lastElement = words[words.length - 1]\n          let value = lastElement.match(/[0-9]*[.]?[0-9]+/gi)\n\n          let obj = { value, arrDate: engArrDate ? engArrDate : arrDate || [] }\n          setDataOject(obj)\n        }\n\n        if (T) {\n          var words = T.split(' ')\n          let lastElement = words[words.length - 1]\n          let value = lastElement.match(/[0-9]*[.]?[0-9]+/gi)\n\n          let obj = { value, arrDate: engArrDate ? engArrDate : arrDate || [] }\n          setDataOject(obj)\n        }\n        setImage(false)\n      })\n      .catch((error) => {\n        setImage(false)\n        console.log(error, 'error')\n      })\n  }, [selectedImage])\n\n  const onDrop = useCallback((acceptedFiles, rejectedFiles) => {\n    if (rejectedFiles.length > 0) {\n      rejectedFiles.forEach(({ file, errors }) => {\n        errors.forEach((error) => {\n          if (error.code === 'file-invalid-type')\n            setError(`${file.name}: File type is not supported.`)\n          else if (error.code === 'too-many-files')\n            setError(`Only one image accepted!.`)\n          else setError(error.message)\n        })\n      })\n    }\n    if (rejectedFiles.length < 1) {\n      setSelectedImage(acceptedFiles[0])\n      setImage(true)\n    }\n  }, [])\n\n  const { getRootProps, getInputProps } = useDropzone({\n    onDrop,\n    accept: 'image/*',\n    maxFiles: 1,\n  })\n\n  return (\n    <div>\n      <section>\n        <div {...getRootProps()}>\n          <input {...getInputProps()} />\n          <Box\n            bgcolor={'#fff'}\n            borderRadius={1}\n            p={1}\n            color={'black'}\n            fontWeight={'bold'}\n            sx={{ cursor: 'pointer' }}\n          >\n            <Button sx={{ color: 'black' }}>Add Transaction Via Picture</Button>\n          </Box>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default Ocr\n","/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/Form/styles.js",[],{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":84,"column":5,"nodeType":"135","endLine":84,"endColumn":17,"suggestions":"136"},{"ruleId":"133","severity":1,"message":"137","line":92,"column":6,"nodeType":"135","endLine":92,"endColumn":22,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":3,"column":7,"nodeType":"141","messageId":"142","endLine":3,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":1,"column":1,"nodeType":"145","endLine":11,"endColumn":3},{"ruleId":"133","severity":1,"message":"146","line":166,"column":6,"nodeType":"135","endLine":166,"endColumn":26,"suggestions":"147"},{"ruleId":"133","severity":1,"message":"148","line":21,"column":6,"nodeType":"135","endLine":21,"endColumn":20,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":33,"nodeType":"152","messageId":"153","endLine":26,"endColumn":34,"suggestions":"154"},{"ruleId":"150","severity":1,"message":"155","line":26,"column":36,"nodeType":"152","messageId":"153","endLine":26,"endColumn":37,"suggestions":"156"},{"ruleId":"150","severity":1,"message":"157","line":26,"column":39,"nodeType":"152","messageId":"153","endLine":26,"endColumn":40,"suggestions":"158"},{"ruleId":"150","severity":1,"message":"151","line":26,"column":50,"nodeType":"152","messageId":"153","endLine":26,"endColumn":51,"suggestions":"159"},{"ruleId":"150","severity":1,"message":"155","line":26,"column":53,"nodeType":"152","messageId":"153","endLine":26,"endColumn":54,"suggestions":"160"},{"ruleId":"150","severity":1,"message":"157","line":26,"column":56,"nodeType":"152","messageId":"153","endLine":26,"endColumn":57,"suggestions":"161"},{"ruleId":"162","severity":1,"message":"163","line":54,"column":15,"nodeType":"141","messageId":"164","endLine":54,"endColumn":20},{"ruleId":"162","severity":1,"message":"163","line":63,"column":15,"nodeType":"141","messageId":"164","endLine":63,"endColumn":20},{"ruleId":"133","severity":1,"message":"165","line":76,"column":6,"nodeType":"135","endLine":76,"endColumn":21,"suggestions":"166"},"no-native-reassign",["167"],"no-negated-in-lhs",["168"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getText'. Either include it or remove the dependency array.","ArrayExpression",["169"],"React Hook React.useEffect has a missing dependency: 'makeAPICall'. Either include it or remove the dependency array.",["170"],"no-unused-vars","'isIncome' is assigned a value but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has missing dependencies: 'createTransaction' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["171"],"React Hook React.useEffect has a missing dependency: 'setSpinnerMode'. Either include it or remove the dependency array. If 'setSpinnerMode' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["172"],"no-useless-escape","Unnecessary escape character: \\-.","Literal","unnecessaryEscape",["173","174"],"Unnecessary escape character: \\/.",["175","176"],"Unnecessary escape character: \\..",["177","178"],["179","180"],["181","182"],["183","184"],"no-redeclare","'words' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'setDataOject'. Either include it or remove the dependency array. If 'setDataOject' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["185"],"no-global-assign","no-unsafe-negation",{"desc":"186","fix":"187"},{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},{"desc":"192","fix":"193"},{"messageId":"194","fix":"195","desc":"196"},{"messageId":"197","fix":"198","desc":"199"},{"messageId":"194","fix":"200","desc":"196"},{"messageId":"197","fix":"201","desc":"199"},{"messageId":"194","fix":"202","desc":"196"},{"messageId":"197","fix":"203","desc":"199"},{"messageId":"194","fix":"204","desc":"196"},{"messageId":"197","fix":"205","desc":"199"},{"messageId":"194","fix":"206","desc":"196"},{"messageId":"197","fix":"207","desc":"199"},{"messageId":"194","fix":"208","desc":"196"},{"messageId":"197","fix":"209","desc":"199"},{"desc":"210","fix":"211"},"Update the dependencies array to be: [getText, inputValue]",{"range":"212","text":"213"},"Update the dependencies array to be: [makeAPICall, selectedFilter]",{"range":"214","text":"215"},"Update the dependencies array to be: [createTransaction, dataOject, formData, segment]",{"range":"216","text":"217"},"Update the dependencies array to be: [error, image, setSpinnerMode]",{"range":"218","text":"219"},"removeEscape",{"range":"220","text":"221"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"222","text":"223"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"224","text":"221"},{"range":"225","text":"223"},{"range":"226","text":"221"},{"range":"227","text":"223"},{"range":"228","text":"221"},{"range":"229","text":"223"},{"range":"230","text":"221"},{"range":"231","text":"223"},{"range":"232","text":"221"},{"range":"233","text":"223"},"Update the dependencies array to be: [selectedImage, setDataOject]",{"range":"234","text":"235"},[2475,2487],"[getText, inputValue]",[2606,2622],"[makeAPICall, selectedFilter]",[4646,4666],"[createTransaction, dataOject, formData, segment]",[564,578],"[error, image, setSpinnerMode]",[688,689],"",[688,688],"\\",[691,692],[691,691],[694,695],[694,694],[705,706],[705,705],[708,709],[708,708],[711,712],[711,711],[2367,2382],"[selectedImage, setDataOject]"]