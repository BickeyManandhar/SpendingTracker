{"ast":null,"code":"var _jsxFileName = \"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/List.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, Typography } from \"react\";\nimport { List as MUIList, ListItem, Box, ListItemAvatar, Avatar, ListItemText, TextField, Grid, ListItemSecondaryAction, IconButton, Slide } from \"@material-ui/core\";\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport useStyles from \"./styles\";\nimport formatDate from \"../../../utils/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst List = () => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    transactions,\n    deleteTransaction\n  } = useContext(ExpenseTrackerContext);\n  const [category, setCategory] = useState(\"\");\n  const [startDate, setStartDate] = useState(formatDate(new Date().toUTCString()));\n  const [endDate, setEndDate] = useState(formatDate(new Date().toUTCString()));\n  const [newTransactions, setNewTransactions] = useState(transactions);\n\n  function SearchByCat() {\n    let output = transactions.filter(item => item.category.toLowerCase() === category.toLowerCase());\n    setNewTransactions(output);\n    return output;\n  }\n\n  function SearchByDate() {\n    let output = transactions.filter(item => item.date >= startDate && item.date <= endDate);\n    setNewTransactions(output);\n    return output;\n  }\n\n  React.useEffect(() => {\n    setNewTransactions(transactions);\n  }, [transactions]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      mt: 1,\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"Search By Category\",\n          onChange: e => {\n            setCategory(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => SearchByCat(),\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"Start Date\",\n          type: \"date\",\n          value: startDate,\n          onChange: e => setStartDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 9,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          label: \"End Date\",\n          type: \"date\",\n          value: endDate,\n          onChange: e => setEndDate(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => SearchByDate(),\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MUIList, {\n      dense: false,\n      className: classes.list,\n      children: newTransactions ? newTransactions.map(transaction => /*#__PURE__*/_jsxDEV(Slide, {\n        direction: \"down\",\n        in: true,\n        mountOnEnter: true,\n        unmountOnExit: true,\n        children: /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              className: transaction.type === \"Income\" ? classes.avatarIncome : classes.avatarExpense,\n              children: /*#__PURE__*/_jsxDEV(MoneyOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: transaction.category,\n            secondary: `$${transaction.amount} - ${transaction.date}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              edge: \"end\",\n              \"aria-label\": \"delete\",\n              onClick: () => deleteTransaction(transaction.id),\n              children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)\n      }, transaction.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No Record Found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"8ZpJA6T8ZCGNMXRWb+iJ6u/7WK4=\", false, function () {\n  return [useStyles];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Main/List/List.jsx"],"names":["React","useContext","useState","Typography","List","MUIList","ListItem","Box","ListItemAvatar","Avatar","ListItemText","TextField","Grid","ListItemSecondaryAction","IconButton","Slide","Delete","MoneyOff","SearchIcon","ExpenseTrackerContext","useStyles","formatDate","classes","transactions","deleteTransaction","category","setCategory","startDate","setStartDate","Date","toUTCString","endDate","setEndDate","newTransactions","setNewTransactions","SearchByCat","output","filter","item","toLowerCase","SearchByDate","date","useEffect","e","target","value","list","map","transaction","type","avatarIncome","avatarExpense","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,SACEC,IAAI,IAAIC,OADV,EAEEC,QAFF,EAGEC,GAHF,EAIEC,cAJF,EAKEC,MALF,EAMEC,YANF,EAOEC,SAPF,EAQEC,IARF,EASEC,uBATF,EAUEC,UAVF,EAWEC,KAXF,QAYO,mBAZP;AAaA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,oBAAjC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;;AAEA,MAAMjB,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMkB,OAAO,GAAGF,SAAS,EAAzB;AACA,QAAM;AAAEG,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,MAAsCvB,UAAU,CAACkB,qBAAD,CAAtD;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACyB,SAAD,EAAYC,YAAZ,IAA4B1B,QAAQ,CACxCmB,UAAU,CAAC,IAAIQ,IAAJ,GAAWC,WAAX,EAAD,CAD8B,CAA1C;AAGA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB9B,QAAQ,CAACmB,UAAU,CAAC,IAAIQ,IAAJ,GAAWC,WAAX,EAAD,CAAX,CAAtC;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwChC,QAAQ,CAACqB,YAAD,CAAtD;;AAEA,WAASY,WAAT,GAAuB;AACrB,QAAIC,MAAM,GAAGb,YAAY,CAACc,MAAb,CACVC,IAAD,IAAUA,IAAI,CAACb,QAAL,CAAcc,WAAd,OAAgCd,QAAQ,CAACc,WAAT,EAD/B,CAAb;AAGAL,IAAAA,kBAAkB,CAACE,MAAD,CAAlB;AACA,WAAOA,MAAP;AACD;;AAED,WAASI,YAAT,GAAwB;AACtB,QAAIJ,MAAM,GAAGb,YAAY,CAACc,MAAb,CACVC,IAAD,IAAUA,IAAI,CAACG,IAAL,IAAad,SAAb,IAA0BW,IAAI,CAACG,IAAL,IAAaV,OADtC,CAAb;AAGAG,IAAAA,kBAAkB,CAACE,MAAD,CAAlB;AACA,WAAOA,MAAP;AACD;;AAEDpC,EAAAA,KAAK,CAAC0C,SAAN,CAAgB,MAAM;AACpBR,IAAAA,kBAAkB,CAACX,YAAD,CAAlB;AACD,GAFD,EAEG,CAACA,YAAD,CAFH;AAIA,sBACE,QAAC,GAAD;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,EAAE,EAAE,CAApB;AAAuB,MAAA,OAAO,EAAE,CAAhC;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,KAAK,EAAC,oBADR;AAEE,UAAA,QAAQ,EAAGoB,CAAD,IAAO;AACfjB,YAAAA,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;AAJH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eASE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAMV,WAAW,EAAtC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAcE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAC,YAFR;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAER,SAJT;AAKE,UAAA,QAAQ,EAAGgB,CAAD,IAAOf,YAAY,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV;AAL/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAuBE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,KAAK,EAAC,UAFR;AAGE,UAAA,IAAI,EAAC,MAHP;AAIE,UAAA,KAAK,EAAEd,OAJT;AAKE,UAAA,QAAQ,EAAGY,CAAD,IAAOX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAvBF,eAgCE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAE,MAAML,YAAY,EAAvC;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAuCE,QAAC,OAAD;AAAS,MAAA,KAAK,EAAE,KAAhB;AAAuB,MAAA,SAAS,EAAElB,OAAO,CAACwB,IAA1C;AAAA,gBACGb,eAAe,GACdA,eAAe,CAACc,GAAhB,CAAqBC,WAAD,iBAClB,QAAC,KAAD;AACE,QAAA,SAAS,EAAC,MADZ;AAEE,QAAA,EAAE,MAFJ;AAGE,QAAA,YAAY,MAHd;AAIE,QAAA,aAAa,MAJf;AAAA,+BAOE,QAAC,QAAD;AAAA,kCACE,QAAC,cAAD;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,SAAS,EACPA,WAAW,CAACC,IAAZ,KAAqB,QAArB,GACI3B,OAAO,CAAC4B,YADZ,GAEI5B,OAAO,CAAC6B,aAJhB;AAAA,qCAOE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE,QAAC,YAAD;AACE,YAAA,OAAO,EAAEH,WAAW,CAACvB,QADvB;AAEE,YAAA,SAAS,EAAG,IAAGuB,WAAW,CAACI,MAAO,MAAKJ,WAAW,CAACP,IAAK;AAF1D;AAAA;AAAA;AAAA;AAAA,kBAZF,eAgBE,QAAC,uBAAD;AAAA,mCACE,QAAC,UAAD;AACE,cAAA,IAAI,EAAC,KADP;AAEE,4BAAW,QAFb;AAGE,cAAA,OAAO,EAAE,MAAMjB,iBAAiB,CAACwB,WAAW,CAACK,EAAb,CAHlC;AAAA,qCAKE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAPF,SAKOL,WAAW,CAACK,EALnB;AAAA;AAAA;AAAA;AAAA,cADF,CADc,gBAsCd,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAvCJ;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoFD,CAlHD;;GAAMjD,I;UACYgB,S;;;KADZhB,I;AAoHN,eAAeA,IAAf","sourcesContent":["import React, { useContext, useState, Typography } from \"react\";\r\nimport {\r\n  List as MUIList,\r\n  ListItem,\r\n  Box,\r\n  ListItemAvatar,\r\n  Avatar,\r\n  ListItemText,\r\n  TextField,\r\n  Grid,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Slide,\r\n} from \"@material-ui/core\";\r\nimport { Delete, MoneyOff } from \"@material-ui/icons\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { ExpenseTrackerContext } from \"../../../context/context\";\r\nimport useStyles from \"./styles\";\r\nimport formatDate from \"../../../utils/formatDate\";\r\n\r\nconst List = () => {\r\n  const classes = useStyles();\r\n  const { transactions, deleteTransaction } = useContext(ExpenseTrackerContext);\r\n  const [category, setCategory] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(\r\n    formatDate(new Date().toUTCString())\r\n  );\r\n  const [endDate, setEndDate] = useState(formatDate(new Date().toUTCString()));\r\n  const [newTransactions, setNewTransactions] = useState(transactions);\r\n\r\n  function SearchByCat() {\r\n    let output = transactions.filter(\r\n      (item) => item.category.toLowerCase() === category.toLowerCase()\r\n    );\r\n    setNewTransactions(output);\r\n    return output;\r\n  }\r\n\r\n  function SearchByDate() {\r\n    let output = transactions.filter(\r\n      (item) => item.date >= startDate && item.date <= endDate\r\n    );\r\n    setNewTransactions(output);\r\n    return output;\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    setNewTransactions(transactions);\r\n  }, [transactions]);\r\n\r\n  return (\r\n    <Box>\r\n      <Grid container mt={1} spacing={2}>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            label=\"Search By Category\"\r\n            onChange={(e) => {\r\n              setCategory(e.target.value);\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <IconButton onClick={() => SearchByCat()}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Start Date\"\r\n            type=\"date\"\r\n            value={startDate}\r\n            onChange={(e) => setStartDate(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={9}>\r\n          <TextField\r\n            fullWidth\r\n            label=\"End Date\"\r\n            type=\"date\"\r\n            value={endDate}\r\n            onChange={(e) => setEndDate(e.target.value)}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          <IconButton onClick={() => SearchByDate()}>\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <MUIList dense={false} className={classes.list}>\r\n        {newTransactions ? (\r\n          newTransactions.map((transaction) => (\r\n            <Slide\r\n              direction=\"down\"\r\n              in\r\n              mountOnEnter\r\n              unmountOnExit\r\n              key={transaction.id}\r\n            >\r\n              <ListItem>\r\n                <ListItemAvatar>\r\n                  <Avatar\r\n                    className={\r\n                      transaction.type === \"Income\"\r\n                        ? classes.avatarIncome\r\n                        : classes.avatarExpense\r\n                    }\r\n                  >\r\n                    <MoneyOff />\r\n                  </Avatar>\r\n                </ListItemAvatar>\r\n                <ListItemText\r\n                  primary={transaction.category}\r\n                  secondary={`$${transaction.amount} - ${transaction.date}`}\r\n                />\r\n                <ListItemSecondaryAction>\r\n                  <IconButton\r\n                    edge=\"end\"\r\n                    aria-label=\"delete\"\r\n                    onClick={() => deleteTransaction(transaction.id)}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            </Slide>\r\n          ))\r\n        ) : (\r\n          <Typography>No Record Found</Typography>\r\n        )}\r\n      </MUIList>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default List;\r\n"]},"metadata":{},"sourceType":"module"}