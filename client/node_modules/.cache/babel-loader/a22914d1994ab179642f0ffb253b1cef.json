{"ast":null,"code":"var _jsxFileName = \"/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/Details.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card, CardHeader, CardContent, Typography, Box, Grid, TextField } from \"@material-ui/core\";\nimport { Doughnut, Bar } from \"react-chartjs-2\";\nimport useStyles from \"./styles\";\nimport useTransactions from \"../../useTransactions\";\nimport formatDate from \"../../utils/formatDate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DetailsCard = _ref => {\n  _s();\n\n  let {\n    title,\n    subheader\n  } = _ref;\n  const classes = useStyles();\n  const [startDate, setStartDate] = useState(formatDate(new Date().toUTCString()));\n  const [endDate, setEndDate] = useState(formatDate(new Date().toUTCString()));\n  const {\n    total,\n    chartData,\n    barData,\n    monthlyTotal\n  } = useTransactions(startDate, endDate, title);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      className: title === \"Income\" ? classes.income : classes.expense,\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        title: title,\n        subheader: subheader\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: [\"$\", total]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Doughnut, {\n          data: chartData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        className: title === \"Income\" ? classes.income : classes.expense,\n        children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n          title: `Last Month ${title} Summary`,\n          subheader: subheader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mx: 2,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"Start Date\",\n                type: \"date\",\n                value: startDate,\n                onChange: e => setStartDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(TextField, {\n                fullWidth: true,\n                label: \"End Date\",\n                type: \"date\",\n                value: endDate,\n                onChange: e => setEndDate(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: [\"$\", monthlyTotal]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Bar, {\n            data: barData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DetailsCard, \"sNLXUbhIWPNOE+ry+84V50KW5Ok=\", false, function () {\n  return [useStyles, useTransactions];\n});\n\n_c = DetailsCard;\nexport default DetailsCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsCard\");","map":{"version":3,"sources":["/Users/bickeymanandhar/Downloads/SpendingTracker/client/src/components/Details/Details.jsx"],"names":["React","useState","Card","CardHeader","CardContent","Typography","Box","Grid","TextField","Doughnut","Bar","useStyles","useTransactions","formatDate","DetailsCard","title","subheader","classes","startDate","setStartDate","Date","toUTCString","endDate","setEndDate","total","chartData","barData","monthlyTotal","income","expense","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  TextField,\r\n} from \"@material-ui/core\";\r\nimport { Doughnut, Bar } from \"react-chartjs-2\";\r\n\r\nimport useStyles from \"./styles\";\r\nimport useTransactions from \"../../useTransactions\";\r\nimport formatDate from \"../../utils/formatDate\";\r\n\r\nconst DetailsCard = ({ title, subheader }) => {\r\n  const classes = useStyles();\r\n  const [startDate, setStartDate] = useState(\r\n    formatDate(new Date().toUTCString())\r\n  );\r\n  const [endDate, setEndDate] = useState(formatDate(new Date().toUTCString()));\r\n\r\n  const { total, chartData, barData, monthlyTotal } = useTransactions(\r\n    startDate,\r\n    endDate,\r\n    title\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n        <CardHeader title={title} subheader={subheader} />\r\n        <CardContent>\r\n          <Typography variant=\"h5\">${total}</Typography>\r\n          <Doughnut data={chartData} />\r\n        </CardContent>\r\n      </Card>\r\n      <Box mt={5}>\r\n        <Card className={title === \"Income\" ? classes.income : classes.expense}>\r\n          <CardHeader\r\n            title={`Last Month ${title} Summary`}\r\n            subheader={subheader}\r\n          />\r\n\r\n          <Box mx={2}>\r\n            <Grid container spacing={1}>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"Start Date\"\r\n                  type=\"date\"\r\n                  value={startDate}\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <TextField\r\n                  fullWidth\r\n                  label=\"End Date\"\r\n                  type=\"date\"\r\n                  value={endDate}\r\n                  onChange={(e) => setEndDate(e.target.value)}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n\r\n          <CardContent>\r\n            <Typography variant=\"h5\">${monthlyTotal}</Typography>\r\n            <Bar data={barData} />\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsCard;\r\n"]},"metadata":{},"sourceType":"module"}